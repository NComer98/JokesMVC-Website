@model JokesWebAppMVC.Models.Joke
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = "Delete";
}

<h1>Delete</h1>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>Joke</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.jokeSetUp)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.jokeSetUp)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.jokePunchline)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.jokePunchline)
        </dd>
    </dl>

    @if (Model.jokeUsername == @UserManager.GetUserAsync(User).Result.UserName || @UserManager.GetUserAsync(User).Result.UserName == "Admin")
    {
        <form asp-action="Delete">
            <input type="hidden" asp-for="id" />
            <input type="submit" value="Delete" class="btn btn-danger" /> |
            <a href="/">Back to List</a>
        </form> 
    } else {
        <div class="btn btn-danger rounded-pill px-3" style="pointer-events:none">
            Cannot delete another user's jokes.
        </div>
        <div>
            <a href="/">Back to List</a>
        </div>
    } 
</div>
